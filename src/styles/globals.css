@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  @apply bg-[#e8e8e8] text-black;
}

html.dark {
  @apply bg-[#212121] text-white;
}

.ellipsis {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-line-clamp: 3; /* 보여줄 줄 수를 설정합니다. */
}

/* 햄버거 메뉴 스타일 */

.hamburger svg {
  height: 2.2em;
  transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

.line {
  fill: none;
  stroke: black;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 3;
  transition: stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
    stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
}

html.dark .line {
  stroke: white;
}

.line-top-bottom {
  stroke-dasharray: 12 63;
}

.stroke-dasharray[12_63] {
  stroke-dasharray: 12 63;
}

.stroke-dasharray[20_300] {
  stroke-dasharray: 20 300;
}

.stroke-dashoffset-[-32.42] {
  stroke-dashoffset: -32.42;
}

input:checked + svg {
  transform: rotate(-45deg);
}

input:checked + svg .line-top-bottom {
  stroke-dasharray: 20 300;
  stroke-dashoffset: -32.42;
}

@keyframes loading {
  0% {
    transform: scaleX(0);
  }
  100% {
    transform: scaleX(1);
  }
}

.animate-loading {
  animation: loading 1s infinite;
}

/* :root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
} */
